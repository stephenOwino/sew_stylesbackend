name: Java CI with Docker

on:
  push:
    branches:
      - main      # Trigger CI/CD on push to main branch
      - steve     # Or any other branch you want to trigger on
  pull_request:
    branches:
      - main      # Trigger on pull request to main branch
      - steve

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 21 with Temurin (specify the Java version)
      - name: Set up JDK 21 with Temurin
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Build the project with Gradle (or Maven if you're using Maven)
      - name: Build with Gradle
        run: ./gradlew build  # Adjust if you are using Maven

      # Verify Docker Installation (check if Docker is available)
      - name: Verify Docker Installation
        run: docker --version

      # Build Docker Image (build your image from the Dockerfile)
      - name: Build Docker Image
        run: |
          docker build -t sew_styles_backend .
          docker images

      # Log in to DockerHub (ensure you have DockerHub secrets configured in GitHub)
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Add DockerHub username as a GitHub secret
          password: ${{ secrets.DOCKER_PASSWORD }}  # Add DockerHub password as a GitHub secret

      # Tag and Push Docker Image to DockerHub
      - name: Push Docker Image to DockerHub
        run: |
          docker tag sew_styles_backend otizaaa/sew_styles_backend:latest
          docker push otizaaa/sew_styles_backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs only after the build job completes

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH (if deploying to a remote server via SSH)
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  # Add your private key to GitHub secrets

      - name: Deploy Docker container to remote server
        run: |
          ssh -o StrictHostKeyChecking=no user@remote-server-ip "docker pull otizaaa/sew_styles_backend:latest"
          ssh -o StrictHostKeyChecking=no user@remote-server-ip "docker-compose -f /path/to/docker-compose.yml up -d"




