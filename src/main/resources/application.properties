spring.application.name=sew_stylesbackend

# Port for the Spring Boot application
server.port=5200

# Database Connection: Using the Docker service name for MySQL
spring.datasource.url=jdbc:mysql://sew_styles_mysql:3306/sew_styles?createDatabaseIfNotExist=true
spring.datasource.username=root # Ensure this matches the MySQL username
spring.datasource.password=Steve@123

# JPA/Hibernate settings
spring.jpa.hibernate.ddl-auto=update  # Use 'none' in production, or switch to Liquibase/Flyway
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Hibernate Connection Pooling (HikariCP is the default in Spring Boot)
# HikariCP connection pool settings
spring.datasource.hikari.maximum-pool-size=10  # Maximum number of connections in the pool
spring.datasource.hikari.idle-timeout=600000  # 10 minutes (time before an idle connection is closed)
spring.datasource.hikari.connection-timeout=30000  # 30 seconds (max time to wait for a connection)
spring.datasource.hikari.max-lifetime=1800000  # 30 minutes (max lifetime of a connection before being closed)
spring.datasource.hikari.minimum-idle=5  # Minimum number of idle connections in the pool
spring.datasource.hikari.validation-timeout=5000  # 5 seconds timeout for connection validation
spring.datasource.hikari.leak-detection-threshold=15000  # 15 seconds to detect a connection leak


# Logging configuration (Consider using console logging or mount a volume for logs)
logging.file.name=Logs/myLogs.logs  # You may want to mount a volume for this in Docker

# Optionally, you can log SQL queries to the console
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=trace

# Optionally log all application logs
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

